# Generated by Django 4.2.7 on 2025-10-14 09:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("hr_management", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="WorkSchedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "schedule_name",
                    models.CharField(default="Default Schedule", max_length=100),
                ),
                (
                    "schedule_type",
                    models.CharField(
                        choices=[
                            ("STANDARD", "Standard 9-5"),
                            ("FLEXIBLE", "Flexible Hours"),
                            ("SHIFT", "Shift Work"),
                            ("REMOTE", "Remote Work"),
                            ("HYBRID", "Hybrid Work"),
                            ("COMPRESSED", "Compressed Work Week"),
                        ],
                        default="STANDARD",
                        max_length=20,
                    ),
                ),
                (
                    "days_of_week",
                    models.JSONField(default=list, help_text="List of working days"),
                ),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField()),
                ("break_duration_minutes", models.PositiveIntegerField(default=60)),
                (
                    "flexible_start_window",
                    models.PositiveIntegerField(
                        default=0, help_text="Minutes of flexibility for start time"
                    ),
                ),
                (
                    "flexible_end_window",
                    models.PositiveIntegerField(
                        default=0, help_text="Minutes of flexibility for end time"
                    ),
                ),
                (
                    "minimum_hours_per_day",
                    models.DecimalField(decimal_places=2, default=8.0, max_digits=4),
                ),
                ("work_location", models.CharField(default="Office", max_length=200)),
                ("remote_work_allowed", models.BooleanField(default=False)),
                (
                    "hybrid_days_in_office",
                    models.PositiveIntegerField(
                        default=5, help_text="Days per week required in office"
                    ),
                ),
                ("effective_from", models.DateField()),
                ("effective_to", models.DateField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="work_schedules",
                        to="hr_management.employee",
                    ),
                ),
            ],
            options={
                "ordering": ["-effective_from"],
            },
        ),
        migrations.CreateModel(
            name="AttendanceReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("report_name", models.CharField(max_length=200)),
                (
                    "report_type",
                    models.CharField(
                        choices=[
                            ("DAILY", "Daily Summary"),
                            ("WEEKLY", "Weekly Report"),
                            ("MONTHLY", "Monthly Analysis"),
                            ("QUARTERLY", "Quarterly Review"),
                            ("ANNUAL", "Annual Report"),
                            ("CUSTOM", "Custom Period"),
                            ("REALTIME", "Real-time Dashboard"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "scope",
                    models.CharField(
                        choices=[
                            ("INDIVIDUAL", "Individual Employee"),
                            ("DEPARTMENT", "Department"),
                            ("TEAM", "Team/Group"),
                            ("COMPANY", "Company-wide"),
                            ("LOCATION", "Location-based"),
                        ],
                        max_length=20,
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                (
                    "report_data",
                    models.JSONField(help_text="Complete report data and statistics"),
                ),
                ("ai_insights", models.TextField(blank=True)),
                ("trends_analysis", models.TextField(blank=True)),
                ("recommendations", models.TextField(blank=True)),
                (
                    "chart_data",
                    models.JSONField(
                        blank=True, help_text="Data for charts and graphs", null=True
                    ),
                ),
                ("is_scheduled", models.BooleanField(default=False)),
                ("schedule_frequency", models.CharField(blank=True, max_length=20)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "departments",
                    models.ManyToManyField(blank=True, to="hr_management.department"),
                ),
                (
                    "employees",
                    models.ManyToManyField(blank=True, to="hr_management.employee"),
                ),
                (
                    "generated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="generated_reports",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AttendanceRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("clock_in_time", models.DateTimeField(blank=True, null=True)),
                ("clock_out_time", models.DateTimeField(blank=True, null=True)),
                ("break_start_time", models.DateTimeField(blank=True, null=True)),
                ("break_end_time", models.DateTimeField(blank=True, null=True)),
                ("total_break_minutes", models.PositiveIntegerField(default=0)),
                (
                    "scheduled_hours",
                    models.DecimalField(decimal_places=2, default=8.0, max_digits=4),
                ),
                (
                    "actual_hours",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=4),
                ),
                (
                    "overtime_hours",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=4),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PRESENT", "Present"),
                            ("ABSENT", "Absent"),
                            ("LATE", "Late"),
                            ("EARLY_DEPARTURE", "Early Departure"),
                            ("HALF_DAY", "Half Day"),
                            ("WORK_FROM_HOME", "Work From Home"),
                            ("ON_LEAVE", "On Leave"),
                            ("HOLIDAY", "Holiday"),
                            ("SICK_LEAVE", "Sick Leave"),
                        ],
                        default="PRESENT",
                        max_length=20,
                    ),
                ),
                ("work_location", models.CharField(blank=True, max_length=200)),
                ("is_remote", models.BooleanField(default=False)),
                (
                    "clock_in_method",
                    models.CharField(
                        choices=[
                            ("MANUAL", "Manual Entry"),
                            ("BIOMETRIC", "Biometric Scanner"),
                            ("MOBILE_APP", "Mobile Application"),
                            ("WEB_PORTAL", "Web Portal"),
                            ("RFID_CARD", "RFID Card"),
                            ("FACE_RECOGNITION", "Face Recognition"),
                            ("GPS_TRACKING", "GPS Tracking"),
                            ("AI_DETECTION", "AI Auto-Detection"),
                        ],
                        default="WEB_PORTAL",
                        max_length=20,
                    ),
                ),
                (
                    "clock_out_method",
                    models.CharField(
                        choices=[
                            ("MANUAL", "Manual Entry"),
                            ("BIOMETRIC", "Biometric Scanner"),
                            ("MOBILE_APP", "Mobile Application"),
                            ("WEB_PORTAL", "Web Portal"),
                            ("RFID_CARD", "RFID Card"),
                            ("FACE_RECOGNITION", "Face Recognition"),
                            ("GPS_TRACKING", "GPS Tracking"),
                            ("AI_DETECTION", "AI Auto-Detection"),
                        ],
                        default="WEB_PORTAL",
                        max_length=20,
                    ),
                ),
                (
                    "clock_in_lat_lng",
                    models.JSONField(
                        blank=True, help_text="GPS coordinates for clock in", null=True
                    ),
                ),
                (
                    "clock_out_lat_lng",
                    models.JSONField(
                        blank=True, help_text="GPS coordinates for clock out", null=True
                    ),
                ),
                (
                    "device_info",
                    models.JSONField(
                        blank=True,
                        help_text="Device and browser information",
                        null=True,
                    ),
                ),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                (
                    "attendance_score",
                    models.DecimalField(
                        decimal_places=2,
                        default=100.0,
                        help_text="AI-calculated attendance quality score",
                        max_digits=5,
                    ),
                ),
                (
                    "pattern_analysis",
                    models.JSONField(
                        blank=True, help_text="AI pattern analysis results", null=True
                    ),
                ),
                ("anomaly_detected", models.BooleanField(default=False)),
                ("anomaly_details", models.TextField(blank=True)),
                ("manager_approved", models.BooleanField(default=False)),
                ("notes", models.TextField(blank=True)),
                ("employee_comments", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_attendance",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attendance_records",
                        to="hr_management.employee",
                    ),
                ),
            ],
            options={
                "ordering": ["-date", "-clock_in_time"],
            },
        ),
        migrations.CreateModel(
            name="AttendancePattern",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "pattern_type",
                    models.CharField(
                        choices=[
                            ("PUNCTUALITY", "Punctuality Pattern"),
                            ("CONSISTENCY", "Consistency Pattern"),
                            ("PRODUCTIVITY", "Productivity Correlation"),
                            ("SEASONAL", "Seasonal Trend"),
                            ("WEEKLY", "Weekly Pattern"),
                            ("MONTHLY", "Monthly Trend"),
                            ("ANOMALY", "Anomaly Pattern"),
                        ],
                        max_length=20,
                    ),
                ),
                ("analysis_start_date", models.DateField()),
                ("analysis_end_date", models.DateField()),
                (
                    "pattern_data",
                    models.JSONField(help_text="Detailed pattern analysis data"),
                ),
                (
                    "confidence_score",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                ("key_insights", models.TextField()),
                ("ai_recommendations", models.TextField(blank=True)),
                ("predicted_future_behavior", models.TextField(blank=True)),
                (
                    "risk_level",
                    models.CharField(
                        choices=[
                            ("LOW", "Low Risk"),
                            ("MEDIUM", "Medium Risk"),
                            ("HIGH", "High Risk"),
                        ],
                        default="LOW",
                        max_length=10,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attendance_patterns",
                        to="hr_management.employee",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AttendanceAlert",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "alert_type",
                    models.CharField(
                        choices=[
                            ("LATE_ARRIVAL", "Late Arrival"),
                            ("EARLY_DEPARTURE", "Early Departure"),
                            ("EXTENDED_ABSENCE", "Extended Absence"),
                            ("PATTERN_CHANGE", "Pattern Change Detected"),
                            ("OVERTIME_ALERT", "Overtime Alert"),
                            ("CONSECUTIVE_LATES", "Consecutive Late Arrivals"),
                            ("LOCATION_ANOMALY", "Location Anomaly"),
                            ("TIME_FRAUD_RISK", "Time Fraud Risk"),
                            ("WELLNESS_CONCERN", "Employee Wellness Concern"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("INFO", "Information"),
                            ("WARNING", "Warning"),
                            ("CRITICAL", "Critical"),
                            ("URGENT", "Urgent Action Required"),
                        ],
                        default="INFO",
                        max_length=10,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("ai_analysis", models.TextField(blank=True)),
                ("suggested_actions", models.TextField(blank=True)),
                ("context_data", models.JSONField(blank=True, null=True)),
                ("is_acknowledged", models.BooleanField(default=False)),
                ("acknowledged_at", models.DateTimeField(blank=True, null=True)),
                ("is_resolved", models.BooleanField(default=False)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                ("resolution_notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "acknowledged_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="acknowledged_alerts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attendance_alerts",
                        to="hr_management.employee",
                    ),
                ),
                (
                    "related_attendance_records",
                    models.ManyToManyField(
                        blank=True, to="hr_management.attendancerecord"
                    ),
                ),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resolved_alerts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at", "-severity"],
            },
        ),
        migrations.AddIndex(
            model_name="attendancerecord",
            index=models.Index(
                fields=["employee", "date"], name="hr_manageme_employe_8141e5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="attendancerecord",
            index=models.Index(
                fields=["date", "status"], name="hr_manageme_date_32e241_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="attendancerecord",
            index=models.Index(
                fields=["anomaly_detected"], name="hr_manageme_anomaly_f05606_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="attendancerecord",
            unique_together={("employee", "date")},
        ),
        migrations.AddIndex(
            model_name="attendancealert",
            index=models.Index(
                fields=["employee", "alert_type"], name="hr_manageme_employe_a72b64_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="attendancealert",
            index=models.Index(
                fields=["severity", "is_resolved"],
                name="hr_manageme_severit_9a80a2_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="attendancealert",
            index=models.Index(
                fields=["created_at"], name="hr_manageme_created_715a89_idx"
            ),
        ),
    ]
